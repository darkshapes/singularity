{
  "Empty Image": {
    "path": "generate",
    "fname": "empty_image",
    "inputs": {
      "required": {},
      "optional": {
        "Width": {
          "fname": "width",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 16384,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Height": {
          "fname": "height",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 16384,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Batch Size": {
          "fname": "batch_size",
          "default": 1,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 4096,
            "step": 1.0,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Color": {
          "fname": "color",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16777215,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Image": {
        "type": "Image"
      }
    }
  },
  "Empty Latent Audio": {
    "path": "generate",
    "fname": "empty_latent_audio",
    "inputs": {
      "required": {},
      "optional": {
        "Seconds": {
          "fname": "seconds",
          "default": 47.6,
          "type": "Float",
          "constraints": {
            "min": 1.0,
            "max": 1000.0,
            "step": 0.1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Batch Size": {
          "fname": "batch_size",
          "default": 1,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 16,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Empty Latent Image": {
    "path": "generate",
    "fname": "empty_latent_image",
    "inputs": {
      "required": {},
      "optional": {
        "Width": {
          "fname": "width",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 16,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Height": {
          "fname": "height",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 16,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Batch Size": {
          "fname": "batch_size",
          "default": 1,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 4096,
            "step": 1512,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "K Sampler": {
    "path": "generate",
    "fname": "k_sampler",
    "inputs": {
      "required": {
        "Model": {
          "fname": "model",
          "type": "Model"
        },
        "Positive": {
          "fname": "positive",
          "type": "Conditioning"
        },
        "Negative": {
          "fname": "negative",
          "type": "Conditioning"
        },
        "Latent": {
          "fname": "latent",
          "type": "Latent"
        }
      },
      "optional": {
        "Sampler Name": {
          "fname": "sampler_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        },
        "Scheduler": {
          "fname": "scheduler",
          "default": null,
          "type": "OneOf",
          "choices": [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        },
        "Seed": {
          "fname": "seed",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 18446744073709551615,
            "step": 1,
            "round": false,
            "randomizable": true
          },
          "display": "numerical"
        },
        "Steps": {
          "fname": "steps",
          "default": 20,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 10000,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Cfg": {
          "fname": "cfg",
          "default": 8.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": false
          },
          "display": "slider"
        },
        "Denoise": {
          "fname": "denoise",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.01,
            "round": false
          },
          "display": "slider"
        },
        "Advanced Options": {
          "fname": "advanced_options",
          "default": false,
          "type": "Bool"
        },
        "Disable Noising": {
          "fname": "disable_noising",
          "default": false,
          "type": "Bool",
          "dependent": {
            "on": "advanced_options",
            "when": true
          }
        },
        "Force Full Denoise": {
          "fname": "force_full_denoise",
          "default": false,
          "type": "Bool",
          "dependent": {
            "on": "advanced_options",
            "when": true
          }
        },
        "Start Step": {
          "fname": "start_step",
          "default": null,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 10000,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical",
          "dependent": {
            "on": "advanced_options",
            "when": true
          }
        },
        "Last Step": {
          "fname": "last_step",
          "default": null,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 10000,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical",
          "dependent": {
            "on": "advanced_options",
            "when": true
          }
        },
        "Noise Types": {
          "fname": "noise_types",
          "default": "cpu",
          "type": "Literal",
          "dependent": {
            "on": "advanced_options",
            "when": true
          }
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Llm Sampler": {
    "path": "generate",
    "fname": "llm_sampler",
    "inputs": {
      "required": {
        "Model": {
          "fname": "model",
          "type": "Model"
        },
        "Prompt": {
          "fname": "prompt",
          "type": "Str"
        }
      },
      "optional": {
        "System Msg": {
          "fname": "system_msg",
          "default": "The following instruction describes a task and is paired with an input that provides further context. Write a response that appropriately completes the request.",
          "type": "Str",
          "constraints": {
            "multiline": true,
            "dynamic_prompts": false
          }
        },
        "Max Tokens": {
          "fname": "max_tokens",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 2048,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Temperature": {
          "fname": "temperature",
          "default": 0.2,
          "type": "Float",
          "constraints": {
            "min": 0.01,
            "max": 2.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Top P": {
          "fname": "top_p",
          "default": 0.95,
          "type": "Float",
          "constraints": {
            "min": 0.1,
            "max": 1.0,
            "step": 0.01,
            "round": false
          },
          "display": "slider"
        },
        "Top K": {
          "fname": "top_k",
          "default": 40,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 100,
            "step": 1,
            "round": false
          },
          "display": "slider"
        },
        "Frequency Penalty": {
          "fname": "frequency_penalty",
          "default": 0,
          "type": "Float",
          "constraints": {
            "min": -2.0,
            "max": 2.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Presence Penalty": {
          "fname": "presence_penalty",
          "default": 0,
          "type": "Float",
          "constraints": {
            "min": -2.0,
            "max": 2.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Repeat Penalty": {
          "fname": "repeat_penalty",
          "default": 1.1,
          "type": "Float",
          "constraints": {
            "min": -2.0,
            "max": 2.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Seed": {
          "fname": "seed",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 18446744073709551615,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Str": {
        "type": "Str"
      }
    }
  },
  "Vae Decode": {
    "path": "vae",
    "fname": "vae_decode",
    "inputs": {
      "required": {
        "Vae": {
          "fname": "vae",
          "type": "Vae"
        },
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Image": {
        "type": "Image"
      }
    }
  },
  "Vae Decode Audio": {
    "path": "generate",
    "fname": "vae_decode_audio",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        },
        "VAE": {
          "fname": "vae",
          "type": "Vae"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Audio": {
        "type": "Audio"
      }
    }
  },
  "Vae Decode Tiled": {
    "path": "vae",
    "fname": "vae_decode_tiled",
    "inputs": {
      "required": {
        "Vae": {
          "fname": "vae",
          "type": "Vae"
        },
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        }
      },
      "optional": {
        "Tile Size": {
          "fname": "tile_size",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 320,
            "max": 4096,
            "step": 64,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Image": {
        "type": "Image"
      }
    }
  },
  "Vae Encode": {
    "path": "vae",
    "fname": "vae_encode",
    "inputs": {
      "required": {
        "Vae": {
          "fname": "vae",
          "type": "Vae"
        },
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Vae Encode Audio": {
    "path": "generate",
    "fname": "vae_encode_audio",
    "inputs": {
      "required": {
        "Audio": {
          "fname": "audio",
          "type": "Audio"
        },
        "VAE": {
          "fname": "vae",
          "type": "Vae"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Vae Encode For Inpaint": {
    "path": "inpaint",
    "fname": "vae_encode_for_inpaint",
    "inputs": {
      "required": {
        "Vae": {
          "fname": "vae",
          "type": "Vae"
        },
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        },
        "Mask": {
          "fname": "mask",
          "type": "Mask"
        }
      },
      "optional": {
        "Grow Mask By": {
          "fname": "grow_mask_by",
          "default": 6,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 64,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Vae Encode Tiled": {
    "path": "vae",
    "fname": "vae_encode_tiled",
    "inputs": {
      "required": {
        "Vae": {
          "fname": "vae",
          "type": "Vae"
        },
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        }
      },
      "optional": {
        "Tile Size": {
          "fname": "tile_size",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 320,
            "max": 4096,
            "step": 64,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Load Latent": {
    "path": "load",
    "fname": "load_latent",
    "inputs": {
      "required": {},
      "optional": {
        "Latent": {
          "fname": "latent",
          "default": null,
          "type": "OneOf",
          "choices": []
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Save Latent": {
    "path": "save",
    "fname": "save_latent",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        }
      },
      "optional": {
        "Filename Prefix": {
          "fname": "filename_prefix",
          "default": "sdbx",
          "type": "Str"
        },
        "Prompt": {
          "fname": "prompt",
          "default": null,
          "type": "Str"
        },
        "Extra Pnginfo": {
          "fname": "extra_pnginfo",
          "default": null
        }
      }
    },
    "outputs": {}
  },
  "Checkpoint Loader": {
    "path": "load",
    "fname": "checkpoint_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Ckpt Name": {
          "fname": "ckpt_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "Anything-V3.0.ckpt",
            "Realistic_Vision_V5.1_fp16-no-ema.safetensors",
            "Realistic_Vision_V6.0_NV_B1_fp16.safetensors",
            "anyloraCheckpoint_bakedvaeBlessedFp16.safetensors",
            "cardosAnime_v10.safetensors",
            "cosxl.safetensors",
            "cosxl_edit.safetensors",
            "counterfeitV30_v30.safetensors",
            "dreamshaperXL_v21TurboDPMSDE.safetensors",
            "dreamshaper_8.safetensors",
            "juggernautXL_v9Rundiffusionphoto2.safetensors",
            "picxReal_10.safetensors",
            "realvisxlV40_v40Bakedvae.safetensors",
            "revAnimated_v2Rebirth.safetensors",
            "sd3_medium.safetensors",
            "sd3_medium_incl_clips.safetensors",
            "sd3_medium_incl_clips_t5xxlfp8.safetensors",
            "sd_xl_base_1.0.safetensors",
            "sd_xl_refiner_1.0.safetensors",
            "sd_xl_turbo_1.0.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors",
            "stable_cascade_stage_b.safetensors",
            "stable_cascade_stage_c.safetensors",
            "stage_a.safetensors",
            "v1-5-pruned-emaonly.ckpt",
            "v1-5-pruned-emaonly.safetensors",
            "v1-5-pruned.ckpt",
            "v1-5-pruned.safetensors",
            "v2-1_768-ema-pruned.ckpt",
            "wd-illusion-fp16.safetensors"
          ]
        }
      }
    },
    "outputs": {
      "Model": {
        "type": "Model"
      },
      "CLIP": {
        "type": "Clip"
      },
      "VAE": {
        "type": "Vae"
      }
    }
  },
  "Clip Loader": {
    "path": "load",
    "fname": "clip_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Clip Name": {
          "fname": "clip_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "clip_g.safetensors",
            "clip_l.safetensors",
            "t5xxl_fp16.safetensors",
            "t5xxl_fp8_e4m3fn.safetensors"
          ]
        },
        "Type": {
          "fname": "type",
          "default": "stable_diffusion",
          "type": "OneOf",
          "choices": [
            "stable_diffusion",
            "stable_cascade",
            "sd3",
            "stable_audio"
          ]
        }
      }
    },
    "outputs": {
      "CLIP": {
        "type": "Clip"
      }
    }
  },
  "Clip Vision Loader": {
    "path": "load",
    "fname": "clip_vision_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Clip Name": {
          "fname": "clip_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "clip_vision_g.safetensors"
          ]
        }
      }
    },
    "outputs": {
      "CLIPVision": {
        "type": "Clipvision"
      }
    }
  },
  "Controlnet Loader": {
    "path": "load",
    "fname": "controlnet_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Control Net Name": {
          "fname": "control_net_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "ControlNet-Plus-Plus_sd15_ade20k_seg.safetensors",
            "ControlNet-Plus-Plus_sd15_canny.safetensors",
            "ControlNet-Plus-Plus_sd15_grayscale_depth.safetensors",
            "ControlNet-Plus-Plus_sd15_hed.bin",
            "ControlNet-Plus-Plus_sd15_lineart.bin",
            "OpenPoseXL2.safetensors",
            "control-lora-openposeXL2-rank256.safetensors",
            "control_lora_rank128_v11e_sd15_ip2p_fp16.safetensors",
            "control_lora_rank128_v11e_sd15_shuffle_fp16.safetensors",
            "control_lora_rank128_v11f1e_sd15_tile_fp16.safetensors",
            "control_lora_rank128_v11f1p_sd15_depth_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_inpaint_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_lineart_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_mlsd_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_normalbae_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_scribble_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_seg_fp16.safetensors",
            "control_lora_rank128_v11p_sd15_softedge_fp16.safetensors",
            "control_lora_rank128_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "control_v11e_sd15_ip2p_fp16.safetensors",
            "control_v11e_sd15_shuffle_fp16.safetensors",
            "control_v11f1e_sd15_tile_fp16.safetensors",
            "control_v11f1p_sd15_depth_fp16.safetensors",
            "control_v11p_sd15_canny_fp16.safetensors",
            "control_v11p_sd15_inpaint_fp16.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors",
            "control_v11p_sd15_mlsd_fp16.safetensors",
            "control_v11p_sd15_normalbae_fp16.safetensors",
            "control_v11p_sd15_openpose_fp16.safetensors",
            "control_v11p_sd15_scribble_fp16.safetensors",
            "control_v11p_sd15_seg_fp16.safetensors",
            "control_v11p_sd15_softedge_fp16.safetensors",
            "control_v11p_sd15s2_lineart_anime_fp16.safetensors",
            "control_v11u_sd15_tile_fp16.safetensors",
            "controlnet-densepose-sdxl.safetensors",
            "depth-zoe-xl-v1.0-controlnet.safetensors",
            "diffusers_xl_canny_full.safetensors",
            "diffusers_xl_canny_mid.safetensors",
            "diffusers_xl_canny_small.safetensors",
            "diffusers_xl_depth_full.safetensors",
            "diffusers_xl_depth_mid.safetensors",
            "diffusers_xl_depth_small.safetensors",
            "ioclab_sd15_recolor.safetensors",
            "kohya_controllllite_xl_blur.safetensors",
            "kohya_controllllite_xl_blur_anime.safetensors",
            "kohya_controllllite_xl_blur_anime_beta.safetensors",
            "kohya_controllllite_xl_canny.safetensors",
            "kohya_controllllite_xl_canny_anime.safetensors",
            "kohya_controllllite_xl_depth.safetensors",
            "kohya_controllllite_xl_depth_anime.safetensors",
            "kohya_controllllite_xl_openpose_anime.safetensors",
            "kohya_controllllite_xl_openpose_anime_v2.safetensors",
            "kohya_controllllite_xl_scribble_anime.safetensors",
            "mistoLine_rank256.safetensors",
            "sai_xl_canny_128lora.safetensors",
            "sai_xl_canny_256lora.safetensors",
            "sai_xl_depth_128lora.safetensors",
            "sai_xl_depth_256lora.safetensors",
            "sai_xl_recolor_128lora.safetensors",
            "sai_xl_recolor_256lora.safetensors",
            "sai_xl_sketch_128lora.safetensors",
            "sai_xl_sketch_256lora.safetensors",
            "sargezt_xl_depth.safetensors",
            "sargezt_xl_depth_faid_vidit.safetensors",
            "sargezt_xl_depth_zeed.safetensors",
            "sargezt_xl_softedge.safetensors",
            "stable_cascade_canny.safetensors",
            "stable_cascade_inpainting.safetensors",
            "stable_cascade_super_resolution.safetensors",
            "t2i-adapter_diffusers_xl_canny.safetensors",
            "t2i-adapter_diffusers_xl_depth_midas.safetensors",
            "t2i-adapter_diffusers_xl_depth_zoe.safetensors",
            "t2i-adapter_diffusers_xl_lineart.safetensors",
            "t2i-adapter_diffusers_xl_openpose.safetensors",
            "t2i-adapter_diffusers_xl_sketch.safetensors",
            "t2i-adapter_xl_canny.safetensors",
            "t2i-adapter_xl_openpose.safetensors",
            "t2i-adapter_xl_sketch.safetensors",
            "thibaud_xl_openpose.safetensors",
            "thibaud_xl_openpose_256lora.safetensors",
            "xinsir-anime-painter-scribble-sdxl-1.0.safetensors",
            "xinsir-controlnet-canny-sdxl-1.0.safetensors",
            "xinsir-controlnet-canny-sdxl-1.0_V2.safetensors",
            "xinsir-controlnet-openpose-sdxl-1.0.safetensors",
            "xinsir-controlnet-scribble-sdxl-1.0.safetensors"
          ]
        }
      }
    },
    "outputs": {
      "ControlNet": {
        "type": "Controlnet"
      }
    }
  },
  "Diff Controlnet Loader": {
    "path": "load",
    "fname": "diff_controlnet_loader",
    "inputs": {
      "required": {
        "Model": {
          "fname": "model",
          "type": "Model"
        }
      },
      "optional": {
        "Control Net Name": {
          "fname": "control_net_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "diff_control_sd15_canny_fp16.safetensors",
            "diff_control_sd15_depth_fp16.safetensors",
            "diff_control_sd15_hed_fp16.safetensors",
            "diff_control_sd15_mlsd_fp16.safetensors",
            "diff_control_sd15_normal_fp16.safetensors",
            "diff_control_sd15_openpose_fp16.safetensors",
            "diff_control_sd15_scribble_fp16.safetensors",
            "diff_control_sd15_seg_fp16.safetensors"
          ]
        }
      }
    },
    "outputs": {
      "ControlNet": {
        "type": "Controlnet"
      }
    }
  },
  "Diffusers Loader": {
    "path": "load",
    "fname": "diffusers_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Model Path": {
          "fname": "model_path",
          "default": null,
          "type": "OneOf",
          "choices": [
            "llava-hf/llava-v1.6-mistral-7b-hf",
            "microsoft/Phi-3-mini-4k-instruct",
            "JingyeChen22/textdiffuser2-full-ft",
            "JingyeChen22/textdiffuser2_layout_planner"
          ]
        }
      }
    },
    "outputs": {
      "Model": {
        "type": "Model"
      },
      "CLIP": {
        "type": "Clip"
      },
      "VAE": {
        "type": "Vae"
      }
    }
  },
  "Dual Clip Loader": {
    "path": "load",
    "fname": "dual_clip_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Clip Name A": {
          "fname": "clip_name_a",
          "default": null,
          "type": "OneOf",
          "choices": []
        },
        "Clip Name B": {
          "fname": "clip_name_b",
          "default": null,
          "type": "OneOf",
          "choices": []
        },
        "Type": {
          "fname": "type",
          "default": "sdxl",
          "type": "OneOf",
          "choices": [
            "sdxl",
            "sd3"
          ]
        }
      }
    },
    "outputs": {
      "CLIP": {
        "type": "Clip"
      }
    }
  },
  "Gligen Loader": {
    "path": "load",
    "fname": "gligen_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Gligen Name": {
          "fname": "gligen_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "gligen_sd14_textbox_pruned.safetensors",
            "gligen_sd14_textbox_pruned_fp16.safetensors"
          ]
        }
      }
    },
    "outputs": {
      "GLIGen": {
        "type": "Gligen"
      }
    }
  },
  "Llm Loader": {
    "path": "load",
    "fname": "llm_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Ckpt Name": {
          "fname": "ckpt_name",
          "default": null,
          "type": "OneOf",
          "choices": []
        },
        "Max Ctx": {
          "fname": "max_ctx",
          "default": 2048,
          "type": "Int",
          "constraints": {
            "min": 128,
            "max": 128000,
            "step": 64,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Gpu Layers": {
          "fname": "gpu_layers",
          "default": 27,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 100,
            "step": 1,
            "round": false
          },
          "display": "slider"
        },
        "N Threads": {
          "fname": "n_threads",
          "default": 8,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 100,
            "step": 1,
            "round": false
          },
          "display": "slider"
        }
      }
    },
    "outputs": {
      "Model": {
        "type": "Model"
      }
    }
  },
  "Load Audio": {
    "path": "load",
    "fname": "load_audio",
    "inputs": {
      "required": {},
      "optional": {
        "Audio": {
          "fname": "audio",
          "default": null,
          "type": "OneOf",
          "choices": []
        },
        "Audio Upload": {
          "fname": "audio_upload",
          "default": true,
          "type": "Bool"
        }
      }
    },
    "outputs": {
      "Audio": {
        "type": "Audio"
      }
    }
  },
  "Load Image": {
    "path": "load",
    "fname": "load_image",
    "inputs": {
      "required": {},
      "optional": {
        "Image": {
          "fname": "image",
          "default": null,
          "type": "OneOf",
          "choices": []
        },
        "Image Upload": {
          "fname": "image_upload",
          "default": true,
          "type": "Bool"
        }
      }
    },
    "outputs": {
      "Image": {
        "type": "Image"
      },
      "Mask": {
        "type": "Mask"
      }
    }
  },
  "Load Image Mask": {
    "path": "load",
    "fname": "load_image_mask",
    "inputs": {
      "required": {},
      "optional": {
        "Image": {
          "fname": "image",
          "default": null,
          "type": "OneOf",
          "choices": []
        },
        "Image Upload": {
          "fname": "image_upload",
          "default": true,
          "type": "Bool"
        },
        "Channel": {
          "fname": "channel",
          "default": "alpha",
          "type": "OneOf",
          "choices": [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        }
      }
    },
    "outputs": {
      "Mask": {
        "type": "Mask"
      }
    }
  },
  "Load Lora": {
    "path": "load",
    "fname": "load_lora",
    "inputs": {
      "required": {
        "Self": {
          "fname": "self",
          "type": "_empty"
        },
        "Model": {
          "fname": "model",
          "type": "Model"
        },
        "Clip": {
          "fname": "clip",
          "type": "Clip"
        }
      },
      "optional": {
        "Lora Name": {
          "fname": "lora_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "GoodHands-beta2.safetensors",
            "Hyper-SD15-12steps-CFG-lora.safetensors",
            "Hyper-SDXL-12steps-CFG-lora.safetensors",
            "blur_control_xl_v1.safetensors",
            "openxl_handsfix.safetensors"
          ]
        },
        "Strength Model": {
          "fname": "strength_model",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": -100.0,
            "max": 100.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Strength Clip": {
          "fname": "strength_clip",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": -100.0,
            "max": 100.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Model": {
        "type": "Model"
      },
      "CLIP": {
        "type": "Clip"
      }
    }
  },
  "Lora Loader Model Only": {
    "path": "load",
    "fname": "lora_loader_model_only",
    "inputs": {
      "required": {
        "Model": {
          "fname": "model",
          "type": "Model"
        }
      },
      "optional": {
        "Lora Name": {
          "fname": "lora_name",
          "default": null,
          "type": "OneOf",
          "choices": []
        },
        "Strength Model": {
          "fname": "strength_model",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": -100.0,
            "max": 100.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Model": {
        "type": "Model"
      }
    }
  },
  "Style Model Loader": {
    "path": "load",
    "fname": "style_model_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Style Model Name": {
          "fname": "style_model_name",
          "default": null,
          "type": "OneOf",
          "choices": []
        }
      }
    },
    "outputs": {
      "StyleModel": {
        "type": "Stylemodel"
      }
    }
  },
  "Unclip Checkpoint Loader": {
    "path": "load",
    "fname": "unclip_checkpoint_loader",
    "inputs": {
      "required": {},
      "optional": {
        "Ckpt Name": {
          "fname": "ckpt_name",
          "default": null,
          "type": "OneOf",
          "choices": [
            "sd21-unclip-h.ckpt",
            "sd21-unclip-l.ckpt",
            "stable_cascade_stage_c.safetensors"
          ]
        }
      }
    },
    "outputs": {
      "Model": {
        "type": "Model"
      },
      "CLIP": {
        "type": "Clip"
      },
      "VAE": {
        "type": "Vae"
      },
      "CLIPVision": {
        "type": "Clipvision"
      }
    }
  },
  "Vae Loader": {
    "path": "load",
    "fname": "vae_loader",
    "inputs": {
      "required": {},
      "optional": {
        "VAE Name": {
          "fname": "vae_name",
          "default": null,
          "type": "Literal"
        }
      }
    },
    "outputs": {
      "VAE": {
        "type": "Vae"
      }
    }
  },
  "Add Text": {
    "path": "prompt",
    "fname": "add_text",
    "inputs": {
      "required": {},
      "optional": {
        "Input Text": {
          "fname": "input_text",
          "default": "",
          "type": "Str",
          "constraints": {
            "multiline": true,
            "dynamic_prompts": true
          }
        }
      }
    },
    "outputs": {
      "Str": {
        "type": "Str"
      }
    }
  },
  "Clip Set Last Layer": {
    "path": "prompt",
    "fname": "clip_set_last_layer",
    "inputs": {
      "required": {
        "Clip": {
          "fname": "clip",
          "type": "Clip"
        }
      },
      "optional": {
        "Stop At Clip Layer": {
          "fname": "stop_at_clip_layer",
          "default": -1,
          "type": "Int",
          "constraints": {
            "min": -24,
            "max": -1,
            "step": 1,
            "round": false
          },
          "display": "slider"
        }
      }
    },
    "outputs": {
      "CLIP": {
        "type": "Clip"
      }
    }
  },
  "Clip Text Encode": {
    "path": "prompt",
    "fname": "clip_text_encode",
    "inputs": {
      "required": {
        "Clip": {
          "fname": "clip",
          "type": "Clip"
        },
        "Text": {
          "fname": "text",
          "type": "Str",
          "constraints": {
            "multiline": true,
            "dynamic_prompts": true
          }
        }
      },
      "optional": {}
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Clip Vision Encode": {
    "path": "prompt",
    "fname": "clip_vision_encode",
    "inputs": {
      "required": {
        "Clip Vision": {
          "fname": "clip_vision",
          "type": "Clipvision"
        },
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        }
      },
      "optional": {}
    },
    "outputs": {
      "CLIPVisionOutput": {
        "type": "Clipvisionoutput"
      }
    }
  },
  "Conditioning Average": {
    "path": "prompt",
    "fname": "conditioning_average",
    "inputs": {
      "required": {
        "To": {
          "fname": "conditioning_to",
          "type": "Conditioning"
        },
        "From": {
          "fname": "conditioning_from",
          "type": "Conditioning"
        }
      },
      "optional": {
        "To Strength": {
          "fname": "to_strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0,
            "max": 1,
            "step": 0.01,
            "round": false
          },
          "display": "slider"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Combine": {
    "path": "prompt",
    "fname": "conditioning_combine",
    "inputs": {
      "required": {
        "A": {
          "fname": "a",
          "type": "Conditioning"
        },
        "B": {
          "fname": "b",
          "type": "Conditioning"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Concat": {
    "path": "prompt",
    "fname": "conditioning_concat",
    "inputs": {
      "required": {
        "To": {
          "fname": "conditioning_to",
          "type": "Conditioning"
        },
        "From": {
          "fname": "conditioning_from",
          "type": "Conditioning"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Set Area": {
    "path": "prompt",
    "fname": "conditioning_set_area",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        }
      },
      "optional": {
        "Width": {
          "fname": "width",
          "default": 64,
          "type": "Int",
          "constraints": {
            "min": 64,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Height": {
          "fname": "height",
          "default": 64,
          "type": "Int",
          "constraints": {
            "min": 64,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "X": {
          "fname": "x",
          "default": 0.0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Y": {
          "fname": "y",
          "default": 0.0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Strength": {
          "fname": "strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 10.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Set Area Percentage": {
    "path": "prompt",
    "fname": "conditioning_set_area_percentage",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        }
      },
      "optional": {
        "Width": {
          "fname": "width",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.01,
            "round": false
          },
          "display": "slider"
        },
        "Height": {
          "fname": "height",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.01,
            "round": false
          },
          "display": "slider"
        },
        "X": {
          "fname": "x",
          "default": 0.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Y": {
          "fname": "y",
          "default": 0.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Strength": {
          "fname": "strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 10.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Set Area Strength": {
    "path": "prompt",
    "fname": "conditioning_set_area_strength",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        }
      },
      "optional": {
        "Strength": {
          "fname": "strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 10.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Set Mask": {
    "path": "prompt",
    "fname": "conditioning_set_mask",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        },
        "Mask": {
          "fname": "mask",
          "type": "Mask"
        }
      },
      "optional": {
        "Set Cond Area": {
          "fname": "set_cond_area",
          "default": "default",
          "type": "OneOf",
          "choices": [
            "default",
            "mask bounds"
          ]
        },
        "Strength": {
          "fname": "strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 10.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Set Timestep Range": {
    "path": "advanced",
    "fname": "conditioning_set_timestep_range",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        }
      },
      "optional": {
        "Start": {
          "fname": "start",
          "default": 0.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.001,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "End": {
          "fname": "end",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.001,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Conditioning Zero Out": {
    "path": "advanced",
    "fname": "conditioning_zero_out",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Controlnet Apply": {
    "path": "prompt",
    "fname": "controlnet_apply",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        },
        "Control Net": {
          "fname": "control_net",
          "type": "Any"
        },
        "Image": {
          "fname": "image",
          "type": "Image"
        }
      },
      "optional": {
        "Strength": {
          "fname": "strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 10.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Controlnet Apply Advanced": {
    "path": "prompt",
    "fname": "controlnet_apply_advanced",
    "inputs": {
      "required": {
        "Positive": {
          "fname": "positive",
          "type": "Conditioning"
        },
        "Negative": {
          "fname": "negative",
          "type": "Conditioning"
        },
        "Control Net": {
          "fname": "control_net",
          "type": "Controlnet"
        },
        "Image": {
          "fname": "image",
          "type": "Image"
        }
      },
      "optional": {
        "Strength": {
          "fname": "strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 10.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Start Percent": {
          "fname": "start_percent",
          "default": 0.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.001,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "End Percent": {
          "fname": "end_percent",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.001,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Vae": {
          "fname": "vae",
          "default": null,
          "type": "Vae"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Gligen Textbox Apply": {
    "path": "prompt",
    "fname": "gligen_textbox_apply",
    "inputs": {
      "required": {
        "Conditioning To": {
          "fname": "conditioning_to",
          "type": "Conditioning"
        },
        "Clip": {
          "fname": "clip",
          "type": "Clip"
        },
        "Gligen Textbox Model": {
          "fname": "gligen_textbox_model",
          "type": "Gligen"
        },
        "Text": {
          "fname": "text",
          "type": "Str",
          "constraints": {
            "multiline": true,
            "dynamic_prompts": true
          }
        }
      },
      "optional": {
        "Width": {
          "fname": "width",
          "default": 64,
          "type": "Int",
          "constraints": {
            "min": 8,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Height": {
          "fname": "height",
          "default": 64,
          "type": "Int",
          "constraints": {
            "min": 8,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "X": {
          "fname": "x",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Y": {
          "fname": "y",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Inpaint Model Conditioning": {
    "path": "inpaint",
    "fname": "inpaint_model_conditioning",
    "inputs": {
      "required": {
        "Positive": {
          "fname": "positive",
          "type": "Conditioning"
        },
        "Negative": {
          "fname": "negative",
          "type": "Conditioning"
        },
        "Vae": {
          "fname": "vae",
          "type": "Vae"
        },
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        },
        "Mask": {
          "fname": "mask",
          "type": "Mask"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      },
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Style Model Apply": {
    "path": "prompt",
    "fname": "style_model_apply",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        },
        "Style Model": {
          "fname": "style_model",
          "type": "Stylemodel"
        },
        "Clip Vision Output": {
          "fname": "clip_vision_output",
          "type": "Clipvisionoutput"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Unclip Conditioning": {
    "path": "prompt",
    "fname": "unclip_conditioning",
    "inputs": {
      "required": {
        "Conditioning": {
          "fname": "conditioning",
          "type": "Conditioning"
        },
        "Clip Vision Output": {
          "fname": "clip_vision_output",
          "type": "Clipvisionoutput"
        }
      },
      "optional": {
        "Strength": {
          "fname": "strength",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": -10.0,
            "max": 10.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Noise Augmentation": {
          "fname": "noise_augmentation",
          "default": 0,
          "type": "Float",
          "constraints": {
            "min": 0.0,
            "max": 1.0,
            "step": 0.01,
            "round": false
          },
          "display": "slider"
        }
      }
    },
    "outputs": {
      "Conditioning": {
        "type": "Conditioning"
      }
    }
  },
  "Preview Image": {
    "path": "save",
    "fname": "preview_image",
    "inputs": {
      "required": {
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        }
      },
      "optional": {
        "Prompt": {
          "fname": "prompt",
          "default": null,
          "type": "Str"
        },
        "Extra Pnginfo": {
          "fname": "extra_pnginfo",
          "default": null
        }
      }
    },
    "outputs": {}
  },
  "Save Audio": {
    "path": "save",
    "fname": "save_audio",
    "inputs": {
      "required": {
        "Audio": {
          "fname": "audio",
          "type": "Audio"
        }
      },
      "optional": {
        "Filename Prefix": {
          "fname": "filename_prefix",
          "default": "audio/sdbx_",
          "type": "Str",
          "constraints": {
            "multiline": false,
            "dynamic_prompts": false
          }
        },
        "Prompt": {
          "fname": "prompt",
          "default": null,
          "type": "Str"
        },
        "Extra Pnginfo": {
          "fname": "extra_pnginfo",
          "default": null
        }
      }
    },
    "outputs": {}
  },
  "Save Image": {
    "path": "save",
    "fname": "save_image",
    "inputs": {
      "required": {
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        }
      },
      "optional": {
        "Filename Prefix": {
          "fname": "filename_prefix",
          "default": "sdbx",
          "type": "Str",
          "constraints": {
            "multiline": false,
            "dynamic_prompts": false
          }
        },
        "Prompt": {
          "fname": "prompt",
          "default": null,
          "type": "Str"
        },
        "Extra Pnginfo": {
          "fname": "extra_pnginfo",
          "default": null
        }
      }
    },
    "outputs": {}
  },
  "Image Batch": {
    "path": "transform",
    "fname": "image_batch",
    "inputs": {
      "required": {
        "Image1": {
          "fname": "image1",
          "type": "Image"
        },
        "Image2": {
          "fname": "image2",
          "type": "Image"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Image": {
        "type": "Image"
      }
    }
  },
  "Image Invert": {
    "path": "transform",
    "fname": "image_invert",
    "inputs": {
      "required": {
        "Image": {
          "fname": "image",
          "type": "Image"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Image": {
        "type": "Image"
      }
    }
  },
  "Image Pad For Outpaint": {
    "path": "transform",
    "fname": "image_pad_for_outpaint",
    "inputs": {
      "required": {
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        }
      },
      "optional": {
        "Left": {
          "fname": "left",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Top": {
          "fname": "top",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Right": {
          "fname": "right",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Bottom": {
          "fname": "bottom",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Feathering": {
          "fname": "feathering",
          "default": 40,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Image": {
        "type": "Image"
      },
      "Mask": {
        "type": "Mask"
      }
    }
  },
  "Image Scale": {
    "path": "transform",
    "fname": "image_scale",
    "inputs": {
      "required": {
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        },
        "Upscale Method": {
          "fname": "upscale_method",
          "type": "OneOf",
          "choices": [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        },
        "Crop": {
          "fname": "crop",
          "type": "OneOf",
          "choices": [
            "disabled",
            "center"
          ]
        }
      },
      "optional": {
        "Width": {
          "fname": "width",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Height": {
          "fname": "height",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Image": {
        "type": "Image"
      }
    }
  },
  "Image Scale By": {
    "path": "transform",
    "fname": "image_scale_by",
    "inputs": {
      "required": {
        "Pixels": {
          "fname": "pixels",
          "type": "Image"
        },
        "Upscale Method": {
          "fname": "upscale_method",
          "type": "OneOf",
          "choices": [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        }
      },
      "optional": {
        "Scale By": {
          "fname": "scale_by",
          "default": 1.0,
          "type": "Float",
          "constraints": {
            "min": 0.01,
            "max": 8.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Image": {
        "type": "Image"
      }
    }
  },
  "Latent Blend": {
    "path": "transform",
    "fname": "latent_blend",
    "inputs": {
      "required": {
        "Samples1": {
          "fname": "samples1",
          "type": "Latent"
        },
        "Samples2": {
          "fname": "samples2",
          "type": "Latent"
        }
      },
      "optional": {
        "Blend Factor": {
          "fname": "blend_factor",
          "default": 0.5,
          "type": "Float",
          "constraints": {
            "min": 0,
            "max": 1.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Latent Composite": {
    "path": "transform",
    "fname": "latent_composite",
    "inputs": {
      "required": {
        "Samples To": {
          "fname": "samples_to",
          "type": "Latent"
        },
        "Samples From": {
          "fname": "samples_from",
          "type": "Latent"
        }
      },
      "optional": {
        "X": {
          "fname": "x",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Y": {
          "fname": "y",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Feather": {
          "fname": "feather",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Latent Crop": {
    "path": "transform",
    "fname": "latent_crop",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        }
      },
      "optional": {
        "Width": {
          "fname": "width",
          "default": 64,
          "type": "Int",
          "constraints": {
            "min": 64,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Height": {
          "fname": "height",
          "default": 64,
          "type": "Int",
          "constraints": {
            "min": 64,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "X": {
          "fname": "x",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Y": {
          "fname": "y",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Latent Flip": {
    "path": "transform",
    "fname": "latent_flip",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        },
        "Flip Method": {
          "fname": "flip_method",
          "type": "OneOf",
          "choices": [
            "x-axis: vertically",
            "y-axis: horizontally"
          ]
        }
      },
      "optional": {}
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Latent From Batch": {
    "path": "transform",
    "fname": "latent_from_batch",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        }
      },
      "optional": {
        "Batch Index": {
          "fname": "batch_index",
          "default": 0,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 63,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Length": {
          "fname": "length",
          "default": 1,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 64,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Latent Rotate": {
    "path": "transform",
    "fname": "latent_rotate",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        },
        "Rotation": {
          "fname": "rotation",
          "type": "OneOf",
          "choices": [
            "none",
            "90 degrees",
            "180 degrees",
            "270 degrees"
          ]
        }
      },
      "optional": {}
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Latent Upscale": {
    "path": "transform",
    "fname": "latent_upscale",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        },
        "Upscale Method": {
          "fname": "upscale_method",
          "type": "OneOf",
          "choices": [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        }
      },
      "optional": {
        "Width": {
          "fname": "width",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Height": {
          "fname": "height",
          "default": 512,
          "type": "Int",
          "constraints": {
            "min": 0,
            "max": 16384,
            "step": 8,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        },
        "Crop": {
          "fname": "crop",
          "default": "disabled",
          "type": "OneOf",
          "choices": [
            "disabled",
            "center"
          ]
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Latent Upscale By": {
    "path": "transform",
    "fname": "latent_upscale_by",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        },
        "Upscale Method": {
          "fname": "upscale_method",
          "type": "OneOf",
          "choices": [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        }
      },
      "optional": {
        "Scale By": {
          "fname": "scale_by",
          "default": 1.5,
          "type": "Float",
          "constraints": {
            "min": 0.01,
            "max": 8.0,
            "step": 0.01,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Repeat Latent Batch": {
    "path": "transform",
    "fname": "repeat_latent_batch",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        }
      },
      "optional": {
        "Amount": {
          "fname": "amount",
          "default": 1,
          "type": "Int",
          "constraints": {
            "min": 1,
            "max": 64,
            "step": 1,
            "round": false,
            "randomizable": false
          },
          "display": "numerical"
        }
      }
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  },
  "Set Latent Noise Mask": {
    "path": "transform",
    "fname": "set_latent_noise_mask",
    "inputs": {
      "required": {
        "Samples": {
          "fname": "samples",
          "type": "Latent"
        },
        "Mask": {
          "fname": "mask",
          "type": "Mask"
        }
      },
      "optional": {}
    },
    "outputs": {
      "Latent": {
        "type": "Latent"
      }
    }
  }
}